apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "fake-gpu.fullname" . }}
  labels:
    {{- include "fake-gpu.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "fake-gpu.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "fake-gpu.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "fake-gpu.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      nodeSelector:
        kubernetes.io/os: "linux"
      {{- with .Values.nodeSelector }}
          {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.nri.runtime.patchConfig }}
      initContainers:
      - name: patch-runtime
        {{- if (not (or (eq .Values.nri.runtime.config nil) (eq .Values.nri.runtime.config.pluginRegistrationTimeout ""))) }}
        args:
          - -nri-plugin-registration-timeout
          - {{ .Values.nri.runtime.config.pluginRegistrationTimeout }}
          - -nri-plugin-request-timeout
          - {{ .Values.nri.runtime.config.pluginRequestTimeout }}
        {{- end }}
        image: {{ .Values.initContainerImage.name }}:{{ .Values.initContainerImage.tag | default .Chart.AppVersion }}
        imagePullPolicy: {{ .Values.initContainerImage.pullPolicy }}
        volumeMounts:
        - name: containerd-config
          mountPath: /etc/containerd
        - name: crio-config
          mountPath: /etc/crio/crio.conf.d
        - name: dbus-socket
          mountPath: /var/run/dbus/system_bus_socket
        securityContext:
          privileged: true
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          command:
            - /fake-gpu/entrypoint.sh
            - -idx
            - {{ .Values.nri.plugin.index | quote}}
            - -name
            - {{ .Values.nri.plugin.name }}
            - -source-path
            - /usr/local/fake-gpu
          securityContext:
            privileged: true
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: nrisockets
            mountPath: /var/run/nri
          - name: host-dev
            mountPath: /host-dev
          - name: config
            mountPath: /etc/fake-gpu
          {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      - name: host-dev
        hostPath:
          path: /dev
          type: Directory
      - name: config
        hostPath:
          path: /usr/local/fake-gpu
          type: DirectoryOrCreate
      - name: nrisockets
        hostPath:
          path: /var/run/nri
          type: DirectoryOrCreate
      {{- if .Values.nri.runtime.patchConfig }}
      - name: containerd-config
        hostPath:
          path: /etc/containerd/
          type: DirectoryOrCreate
      - name: crio-config
        hostPath:
          path: /etc/crio/crio.conf.d/
          type: DirectoryOrCreate
      - name: dbus-socket
        hostPath:
          path: /var/run/dbus/system_bus_socket
          type: Socket
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
